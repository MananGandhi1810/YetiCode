// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ProjectFramework {
    Node
    React
    Express
    Next
    Flask
    Django
    Docker
    Other
}

model User {
    id            String    @id @default(cuid())
    name          String
    email         String    @unique
    ghUsername    String    @unique
    ghAccessToken String
    ghId          Int       @unique
    avatarUrl     String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    projects      Project[]

    @@map("users")
}

model Project {
    id            String           @id @default(cuid())
    name          String
    description   String?
    githubUrl     String?
    envSecrets    EnvSecrets[]
    status        String           @default("pending")
    framework     ProjectFramework
    imageName     String?
    deployCommit  String?
    containerId   String?          @unique
    containerPort String?
    containerLogs String?
    createdAt     DateTime         @default(now())
    lastDeploy    DateTime?
    branchName    String?          @default("main")
    baseDirectory String?          @default("")
    webhookId     String?          @unique
    domainName    String?          @unique
    User          User             @relation(fields: [userId], references: [id])
    userId        String
    dockerfile    String?

    @@map("projects")
}

model EnvSecrets {
    id        String  @id @default(cuid())
    key       String
    value     String
    project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId String

    @@unique([key, projectId])
    @@map("env_secrets")
}
